<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Marketing Insights</title>
  <link rel="stylesheet" href="styles.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <script src="https://cdn.jsdelivr.net/npm/papaparse@5.3.2/papaparse.min.js"></script>
  <style>
    body {
      background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
      color: #333;
      padding: 15px;
      min-height: 100vh;
    }
    .additional-section {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 20px;
      margin-bottom: 25px;
    }
    .placeholder-box {
      background: rgba(255, 255, 255, 0.92);
      border-radius: 12px;
      padding: 25px;
      box-shadow: 0 8px 20px rgba(0,0,0,0.08);
      text-align: center;
      min-height: 220px;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
      border: 1px solid rgba(0, 0, 0, 0.05);
    }
    .placeholder-box:hover {
      transform: translateY(-8px);
      box-shadow: 0 12px 25px rgba(0,0,0,0.15);
      background: white;
    }
    .placeholder-box::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 5px;
      background: linear-gradient(90deg, #3498db, #9b59b6);
    }
    .placeholder-box i {
      font-size: 2.5rem;
      margin-bottom: 15px;
      color: #3498db;
      transition: all 0.3s ease;
    }
    .placeholder-box:hover i {
      transform: scale(1.15);
      color: #e74c3c;
    }
    .placeholder-box h3 {
      color: #2c3e50;
      margin-bottom: 12px;
      font-size: 1.4rem;
      font-weight: 600;
    }
    .placeholder-box p {
      color: #7f8c8d;
      font-size: 1rem;
      margin-bottom: 15px;
      line-height: 1.5;
    }
    .box-link {
      display: inline-block;
      margin-top: 10px;
      padding: 10px 20px;
      background: linear-gradient(135deg, #3498db, #2980b9);
      color: white;
      border-radius: 30px;
      text-decoration: none;
      font-size: 0.95rem;
      font-weight: 500;
      transition: all 0.3s ease;
    }
  </style>
</head>
<body>
  <h1>Marketing Insights</h1>
  <div class="additional-section" id="cards-container">
    <!-- Cards will be auto-generated here -->
  </div>

  <script>
  // CHANGE THIS TO YOUR PUBLISHED CSV URL from Google Sheets
  // For example: const csvUrl = 'https://docs.google.com/spreadsheets/d/e/2PACX-.../pub?output=csv';
  const csvUrl = 'PASTE_YOUR_PUBLISHED_GOOGLESHEET_CSV_URL_HERE';

  // The name of the column in your CSV that contains the URL to fetch og:image from
  const urlColumnName = 'url'; // Change this if your column has a different name

  // Optional: Other columns you want to display
  const titleColumnName = 'title'; // Change as needed
  const descColumnName = 'desc';   // Change as needed

  function fetchOgImage(targetUrl) {
    // Uses microlink.io API to get og:image
    return fetch('https://api.microlink.io/?url=' + encodeURIComponent(targetUrl))
      .then(res => res.json())
      .then(data => data?.data?.image?.url || '') // Returns og:image URL or empty string
      .catch(() => '');
  }

  function createCard({ title, desc, url, imageUrl }) {
    // Returns HTML for a card with image, title, description, and link
    return `
      <div class="placeholder-box">
        <img src="${imageUrl || 'https://via.placeholder.com/180x100?text=Loading...'}" alt="Preview image" style="max-width: 180px; max-height: 100px; border-radius:8px; margin-bottom:10px;" />
        <h3>${title || ''}</h3>
        <p>${desc || ''}</p>
        <a class="box-link" href="${url}" target="_blank"><i class="fa fa-link"></i> Visitar</a>
      </div>
    `;
  }

  // Main function to load data and build cards
  function loadCardsFromCSV() {
    PapaParse.parse(csvUrl, {
      download: true,
      header: true,
      complete: async function(results) {
        const cardsContainer = document.getElementById('cards-container');
        cardsContainer.innerHTML = '';
        const rows = results.data.filter(row => row[urlColumnName]);
        // First render placeholders, then update images after og:image is fetched
        rows.forEach((row, idx) => {
          const cardHtml = createCard({
            title: row[titleColumnName],
            desc: row[descColumnName],
            url: row[urlColumnName],
            imageUrl: '' // Placeholder while loading
          });
          const cardDiv = document.createElement('div');
          cardDiv.innerHTML = cardHtml;
          cardDiv.className = 'placeholder-box';
          cardDiv.id = 'card-' + idx;
          cardsContainer.appendChild(cardDiv);
        });
        // Fetch og:image for each card and update the image
        rows.forEach(async (row, idx) => {
          const imageUrl = await fetchOgImage(row[urlColumnName]);
          const cardDiv = document.getElementById('card-' + idx);
          if (cardDiv) {
            const img = cardDiv.querySelector('img');
            if (img && imageUrl) img.src = imageUrl;
          }
        });
      }
    });
  }

  // Run on page load
  loadCardsFromCSV();
  </script>
</body>
</html>
